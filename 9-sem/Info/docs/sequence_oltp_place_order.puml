@startuml TechMarket_Sequence_OLTP_Order
title TechMarket — Sequence: Оформити замовлення (Microservices)
autonumber

actor "Клієнт" as Customer
boundary "Веб/Мобільний UI" as UI
boundary "API Gateway" as GW
control "Auth Service" as AUTH
control "Order Service" as ORDER
control "Catalog Service" as CATALOG
control "Payment Service" as PAYMENT
database "Orders DB" as DB_ORDERS
database "Catalog DB" as DB_CATALOG
entity "Платіжна система (PSP)" as PSP
collections "Message Broker" as BROKER
collections "Аудит/Логи" as LOG
boundary "Notification Service" as NOTIF

Customer -> UI: Обрати товари, заповнити дані
UI -> GW: POST /orders {region, items} + Authorization: <token>
activate GW

GW -> AUTH: validate(token)
AUTH --> GW: claims(valid|invalid)
alt Невалідний токен
  GW -> LOG: auth_failed(reason)
  GW --> UI: 401 Unauthorized
  deactivate GW
  return
end

GW -> ORDER: create_order(request, claims)
activate ORDER
ORDER -> LOG: create_order(request)
ORDER -> CATALOG: get product details/prices
activate CATALOG
CATALOG -> DB_CATALOG: Отримати товари/ціни
DB_CATALOG --> CATALOG: products/prices
deactivate CATALOG

ORDER -> DB_ORDERS: Створити замовлення
DB_ORDERS --> ORDER: order_id
loop Для кожної позиції
  ORDER -> DB_ORDERS: Додати позицію
end
ORDER -> DB_ORDERS: Розрахувати/оновити суму замовлення

ORDER -> PAYMENT: initiate_payment(order_id, amount)
activate PAYMENT
PAYMENT -> PSP: Авторизація/списання

alt Платіж успішний
  PSP --> PAYMENT: success(auth_code)
  PAYMENT --> ORDER: payment_success(order_id, amount)
  ORDER -> DB_ORDERS: Оновити статус: paid
  ORDER -> BROKER: Publish OrderPaid(order_id)
  ORDER -> LOG: order_paid(order_id, amount)
  ORDER --> GW: 201 Created {order_id, status='paid'}
else Відмова у платежі
  PSP --> PAYMENT: failure(reason)
  PAYMENT --> ORDER: payment_failed(order_id, reason)
  ORDER -> DB_ORDERS: Оновити статус: cancelled
  ORDER -> LOG: order_failed(order_id, reason)
  ORDER --> GW: 402 Payment Required {reason}
end

deactivate PAYMENT
deactivate ORDER

BROKER --> NOTIF: OrderPaid(order_id)
NOTIF -> LOG: send_confirmation(order_id)
NOTIF --> UI: (асинхронно) лист/повідомлення клієнту

GW --> UI: Response
deactivate GW

@enduml
